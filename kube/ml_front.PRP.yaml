apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ml-front
  namespace: ml
  annotations:
    kubernetes.io/ingress.class: traefik
  labels:
    k8s-app: ml-front
spec:
  rules:
  - host: ml-front.nautilus.optiputer.net
    http:
      paths:
      - path: /
        backend:
          serviceName: ml-front
          servicePort: 443
---
kind: Service
apiVersion: v1
metadata:
  name: ml-front
  namespace: ml
  labels:
    k8s-app: ml-front
spec:
  type: LoadBalancer
  ports:
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    k8s-app: ml-front
---
apiVersion: v1
kind: Pod
metadata:
  name: ml-front  
  namespace: ml
  labels:
    k8s-app: ml-front
spec:
  containers:
  - name: ml-front
    image: sslhep/mlfront:latest
    ports:
      - containerPort: 443
      - containerPort: 80
    livenessProbe:
      httpGet:
        scheme: HTTPS
        path: /healthz
        port: 443
      periodSeconds: 60
      initialDelaySeconds: 60
      timeoutSeconds: 10
    volumeMounts:
    - name: https-certs-volume
      mountPath: "/etc/https-certs/"
      readOnly: true
    - name: globus-conf-volume
      mountPath: "/etc/globus-conf/"
    - name: ml-front-conf-volume
      mountPath: "/etc/ml-front-conf/"
  volumes:
  - name: https-certs-volume
    secret:
      secretName: codas-cert-secret
      items:
      - key: key
        path: key.pem
        mode: 256 
      - key: cert
        path: cert.pem
  - name: globus-conf-volume
    secret:
      secretName: codas-globus-secret
      items:
      - key: gconf
        path: globus-config.json
  - name: ml-front-conf-volume
    secret:
      secretName: codas-config
      items:
      - key: mlconf
        path: mlfront-config.json
  serviceAccountName: ml-fronter
  restartPolicy: Always
